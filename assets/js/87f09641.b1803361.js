"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8595],{18324:e=>{e.exports=JSON.parse('{"functions":[{"name":"GetActiveUpdates","desc":"Should be used immediately after a [```Profile```](/api/Profile) is loaded to scan and progress any pending ```Active``` updates\\n to a ```Locked``` state\\n\\n```lua\\n-- Example usage\\nfor _, update in ipairs(profile.GlobalUpdates:GetActiveUpdates()) do\\n  profile.GlobalUpdates:LockActiveUpdate(update[1])\\nend\\n```","params":[],"returns":[{"desc":"","lua_type":"{ProfileServiceGlobalUpdate}"}],"function_type":"method","tags":["Always Available"],"source":{"line":594,"path":"src/ProfileService.lua"}},{"name":"GetLockedUpdates","desc":"Should be used immediately after a [```Profile```](/api/Profile) is loaded to scan and progress any pending ```Locked``` updates\\n to a ```Cleared``` state\\n\\n```lua\\n-- Example usage\\nfor _, update in ipairs(profile.GlobalUpdates:GetLockedUpdates()) do\\n  local update_id = update[1]\\n  local update_data = update[2]\\n  if update_data.Type == \\"AdminGift\\" and update_data.Item == \\"Coins\\" then\\n    profile.Data.Coins = profile.Data.Coins + update_data.Amount\\n  end\\n  profile.GlobalUpdates:ClearLockedUpdate(update_id)\\nend\\n```","params":[],"returns":[{"desc":"","lua_type":"{ProfileServiceGlobalUpdate}"}],"function_type":"method","tags":["Always Available"],"source":{"line":617,"path":"src/ProfileService.lua"}},{"name":"ListenToNewActiveUpdate","desc":":::info\\nThis method is only available when the global_data object is accessed through [```Profile.GlobalUpdates```](/api/Profile#GlobalUpdates)\\n:::\\n\\n\\n\\nIn most games, you should progress all ```Active``` updates to a ```Locked``` state.\\n\\n```lua\\n-- Example usage\\nprofile.GlobalUpdates:ListenToNewActiveUpdate(function(update_id, update_data)\\n  profile.GlobalUpdates:LockActiveUpdate(update_id)\\nend)\\n```","params":[{"name":"listener","desc":"","lua_type":"(update_id: number, update_data: any) -> ()"}],"returns":[{"desc":"The connection which is used to listen to new active updates","lua_type":"RBXScriptConnection"}],"function_type":"method","source":{"line":639,"path":"src/ProfileService.lua"}},{"name":"ListenToNewLockedUpdate","desc":":::info\\nThis method is only available when the global_data object is accessed through [```Profile.GlobalUpdates```](/api/Profile#GlobalUpdates)\\n:::\\n\\n\\n\\nWhen you get a ```Locked``` update via ```global_updates:ListenToNewLockedUpdate()```, the update is ready to be proccessed and immediately locked.\\n\\n```lua\\n-- Example usage\\nprofile.GlobalUpdates:ListenToNewLockedUpdate(function(update_id, update_data)\\n  if update_data.Type == \\"AdminGift\\" and update_data.Item == \\"Coins\\" then\\n    profile.Data.Coins = profile.Data.Coins + update_data.Amount\\n  end\\n  profile.GlobalUpdates:ClearLockedUpdate(update_id)\\nend)\\n```","params":[{"name":"listener","desc":"Must always call [```global_updates:ClearLockedUpdate(update_id)```](#ClearLockedUpdate) after processing the locked update","lua_type":"(update_id: number, update_data: any) -> ()"}],"returns":[{"desc":"The connection which is used to listen to new active updates","lua_type":"RBXScriptConnection"}],"function_type":"method","source":{"line":664,"path":"src/ProfileService.lua"}},{"name":"LockActiveUpdate","desc":":::info\\nThis method is only available when the global_data object is accessed through [```Profile.GlobalUpdates```](/api/Profile#GlobalUpdates)\\n:::\\n\\n\\n\\nTurns an ```Active``` update into a ```Locked``` update. Will invoke \\n[```global_updates:ListenToNewLockedUpdate()```](#ListenToNewLockedUpdate) after an auto-save (less than 30 seconds) or \\n[```Profile:Save()```](/api/Profile#Save).\\n\\n:::caution\\nCalling ```global_updates:LockActiveUpdate()``` when the Profile\\n is released will throw an error. You can check\\n [```Profile:IsActive()```](/api/Profile#IsActive) before using this method. ProfileService\\n guarantees that the Profile will be active when\\n [```global_updates:ListenToNewActiveUpdate()```](#ListenToNewActiveUpdate) listeners are triggered.\\n:::","params":[{"name":"update_id","desc":"The Id representing the global update","lua_type":"number"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":689,"path":"src/ProfileService.lua"}},{"name":"ClearLockedUpdate","desc":":::info\\nThis method is only available when the global_data object is accessed through [```Profile.GlobalUpdates```](/api/Profile#GlobalUpdates)\\n:::\\n\\n\\n\\nClears a ```Locked``` update completely from the Profile.\\n\\n:::caution\\nCalling\\n ```GlobalUpdates:ClearLockedUpdate()``` when the Profile is released will throw an error. You can check\\n [```Profile:IsActive()```](/api/Profile#IsActive) before using this method.\\n ProfileService guarantees that the Profile will be active when\\n [```GlobalUpdates:ListenToNewLockedUpdate()```](#ListenToNewLockedUpdate) listeners are triggered.\\n:::","params":[{"name":"update_id","desc":"The Id representing the global update","lua_type":"number"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":712,"path":"src/ProfileService.lua"}},{"name":"AddActiveUpdate","desc":":::info\\nThis method is only available within a [```global_update_handler```](/api/ProfileStore#global_update_handler)\\n from a [```ProfileStore:GlobalUpdateProfileAsync()```](/api/ProfileStore#GlobalUpdateProfileAsync) call\\n:::\\n\\nUsed to send a new ```Active``` update to the profile","params":[],"returns":[],"function_type":"method","source":{"line":724,"path":"src/ProfileService.lua"}},{"name":"ChangeActiveUpdate","desc":":::info\\nThis method is only available within a [```global_update_handler```](/api/ProfileStore#global_update_handler)\\n from a [```ProfileStore:GlobalUpdateProfileAsync()```](/api/ProfileStore#GlobalUpdateProfileAsync) call\\n:::\\n\\n\\nChanging ```Active``` updates can be used for stacking\\n player gifts, particularly when lots of players can be sending lots of gifts to a Youtube celebrity\\n  so the ```Profile``` would not exceed the\\n  [DataStore data limit](https://developer.roblox.com/en-us/articles/Datastore-Errors#data-limits).","params":[{"name":"update_id","desc":"The Id of the update to change","lua_type":"number"},{"name":"update_data","desc":"The new data to send","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":742,"path":"src/ProfileService.lua"}},{"name":"ClearActiveUpdate","desc":":::info\\nThis method is only available within a [```global_update_handler```](/api/ProfileStore#global_update_handler)\\n from a [```ProfileStore:GlobalUpdateProfileAsync()```](/api/ProfileStore#GlobalUpdateProfileAsync) call\\n:::\\n\\n\\nRemoves an ```Active``` update from the profile completely.","params":[{"name":"update_id","desc":"The Id of the update to clear","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":756,"path":"src/ProfileService.lua"}}],"properties":[],"types":[{"name":"ProfileServiceGlobalUpdate","desc":"","lua_type":"{update_id: string, update_data: any}","source":{"line":576,"path":"src/ProfileService.lua"}}],"name":"global_updates","desc":"A powerful feature of profile service, allowing for sending information across servers, or to a Profile which isn\'t loaded in any server.\\n\\nGlobal Updates can be ```Active```, ```Locked```, or ```Cleared```:\\n- Whenever a global update is created, it will be ```Active``` by default\\n- ```Active``` updates can be **changed** or **cleared** within a [```:GlobalUpdateProfileAsync()```](/api/ProfileStore#GlobalUpdateProfileAsync) call\\n- Normally, when the profile is active on a Roblox server, you should always progress all ```Active``` updates to the ```Locked``` state\\n- ```Locked``` updates can no longer be **changed** or **cleared** within a ```:GlobalUpdateProfileAsync()``` call\\n- ```Locked``` updates are ready to be processed (e.g. add gift to player inventory) and immediately ```Locked``` by calling\\n [```:LockActiveUpdate(update_id)```](#LockActiveUpdate)\\n- ```Cleared``` updates will immediately disappear from the profile forever\\n\\n:::warning\\nSome methods are only available in certain contexts, these will be marked with a tag or explicitly stated in the description\\n:::","source":{"line":571,"path":"src/ProfileService.lua"}}')}}]);