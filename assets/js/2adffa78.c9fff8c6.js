"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[686],{36665:e=>{e.exports=JSON.parse('{"functions":[{"name":"AdjustBiome","desc":"Sets the current biome to the specified one\\n\\n```lua\\ntask.wait(5)\\nBiomeHandler.AdjustBiome(\\"Snow\\")\\n-- Changes the biome to snow 5 seconds after the game is run\\n```","params":[{"name":"BiomeName","desc":"The biome to set to","lua_type":"Biome"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"static","source":{"line":121,"path":"src/BiomeModule.lua"}},{"name":"TickBiome","desc":"Ticks the biome, only works when the current biome is Overworld\\n\\n```lua\\nwhile true do\\n    if BiomeHandler.CurrentBiome ~= \\"Overworld\\" then\\n        task.wait(0.1)\\n        return\\n    end\\n    BiomeHandler.TickBiome()\\n    task.wait(0.1)\\nend\\n-- Ticks the biomoe every 0.1 seconds it is overworld\\n```\\n\\n:::warning\\nAttempting to tick the biome when it is not Overworld will cause it to not work. Manual checks must be implemented in the script calling BiomeHandler.TickBiome.\\n:::","params":[],"returns":[{"desc":"Whether or not the biome was set from Overworld","lua_type":"boolean"}],"function_type":"static","private":true,"source":{"line":148,"path":"src/BiomeModule.lua"}}],"properties":[{"name":"BiomeChanged","desc":"An RBXScriptSignal which fires when the biome is changed, passing the new [Biome](#Biome) as an argument\\n\\n```lua\\nBiomeHandler.BiomeChanged:Connect(function(NewBiome: Biome)\\n    print(NewBiome)\\nend)\\n```","lua_type":"RBXScriptSignal","readonly":true,"source":{"line":45,"path":"src/BiomeModule.lua"}},{"name":"BiomeStartTick","desc":"The time the biome started according to [tick()](https://create.roblox.com/docs/reference/engine/globals/RobloxGlobals#tick)\\n\\n```lua\\ntask.wait(5)\\nprint(\\"The biome started at \\" .. BiomeHandler.BiomeStartTick)\\n```","lua_type":"number","readonly":true,"source":{"line":58,"path":"src/BiomeModule.lua"}},{"name":"CurrentBiome","desc":"The current [Biome](#Biome)\\n\\n```lua\\nif BiomeHandler.CurrentBiome == \\"Starry\\" then\\n    print(\\"It\'s starry tonight!\\")\\nend\\n```","lua_type":"Biome","readonly":true,"source":{"line":72,"path":"src/BiomeModule.lua"}},{"name":"CurrentBiomeData","desc":"The [extra data](#ExtraBiomeData) about the current biome\\n\\n```lua\\nlocal CurrentBiomeData: ExtraBiomeData = BiomeHandler.CurrentBiomeData\\nprint(\\"The current biome has a \\" .. CurrentBiomeData.Chance .. \\"% chance of occuring\\")\\n```","lua_type":"ExtraBiomeData","readonly":true,"source":{"line":85,"path":"src/BiomeModule.lua"}},{"name":"EnableBiomeTick","desc":"Whether or not the game with attempt to change the biome\\n\\n```lua\\nwhile true do\\n    if not BiomeHandler.EnableBiomeTick then\\n        print(\\"Biome tick is disabled!\\")\\n    else\\n      print(\\"Biome tick is enabled!\\")\\n    end\\n    task.wait()\\nend\\n```","lua_type":"boolean","readonly":true,"source":{"line":104,"path":"src/BiomeModule.lua"}}],"types":[{"name":"Biome","desc":"A biome, typically used in the biome handler\\n\\n```lua\\nlocal BiomeToUse: Biome = \\"Flame\\"\\nBiomeHandler:AdjustBiome(BiomeToUse)\\n```","lua_type":"\\"Overworld\\" | \\"Snow\\" | \\"Flame\\" | \\"Nature\\" | \\"Starry\\"","source":{"line":17,"path":"src/BiomeModule.lua"}},{"name":"ExtraBiomeData","desc":"The extra data for a Biome, including Chance and Duration\\n\\n```lua\\nlocal CurrentBiomeData: ExtraBiomeData = BiomeHandler.CurrentBiomeData\\nprint(\\"The current biome has a duration of \\" .. CurrentBiomeData.Duration .. \\" seconds\\")\\n```","fields":[{"name":"Chance","lua_type":"number","desc":"The chance of the biome occuring, in %"},{"name":"Duration","lua_type":"number","desc":"The duration of the biome, in seconds"}],"source":{"line":31,"path":"src/BiomeModule.lua"}}],"name":"BiomeHandler","desc":"The handler for biomes within Universal Craftwars","source":{"line":5,"path":"src/BiomeModule.lua"}}')}}]);